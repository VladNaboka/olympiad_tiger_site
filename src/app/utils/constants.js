// –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const USER_ROLES = {
  MAIN_ADMIN: 1,      // –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
  REGIONAL_ADMIN: 2,  // –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å
};

export const ROLE_NAMES = {
  [USER_ROLES.MAIN_ADMIN]: 'Main Administrator',
  [USER_ROLES.REGIONAL_ADMIN]: 'Regional Representative',
  'owner': 'Main Administrator',
  'admin': 'Regional Representative',
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π
export const isMainAdmin = (user) => {
  return user.role_id === USER_ROLES.MAIN_ADMIN || user.role === 'owner';
};

export const isRegionalAdmin = (user) => {
  return user.role_id === USER_ROLES.REGIONAL_ADMIN || user.role === 'admin';
};

export const getUserRoleName = (user) => {
  if (user.role_id) {
    return ROLE_NAMES[user.role_id] || 'Unknown Role';
  }
  return ROLE_NAMES[user.role] || user.role || 'Unknown Role';
};

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ (4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - ID 1-4)
export const MATH_CATEGORIES = [
  { id: 1, name: 'Grade 5-6', minAge: 10, maxAge: 12, subject: 'math' },
  { id: 2, name: 'Grade 7-8', minAge: 12, maxAge: 14, subject: 'math' },
  { id: 3, name: 'Grade 9-10', minAge: 14, maxAge: 16, subject: 'math' },
  { id: 4, name: 'Grade 11-12', minAge: 16, maxAge: 18, subject: 'math' }
];

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∏—Å–∫—É—Å—Å—Ç–≤–∞ (3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - ID 5-7) 
export const ART_CATEGORIES = [
  { id: 5, name: 'Age 6-9', minAge: 6, maxAge: 9, subject: 'art' },
  { id: 6, name: 'Age 10-13', minAge: 10, maxAge: 13, subject: 'art' },
  { id: 7, name: 'Age 14-17', minAge: 14, maxAge: 17, subject: 'art' }
];

// –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–º–µ—Å—Ç–µ
export const ALL_CATEGORIES = [...MATH_CATEGORIES, ...ART_CATEGORIES];

// –°—Ç–∞—Ä–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export const CATEGORIES = ALL_CATEGORIES;

// –ü—Ä–µ–¥–º–µ—Ç—ã
export const SUBJECTS = [
  { id: '1', name: 'Art' },
  { id: '2', name: 'Mathematics' }
];

// –°—Ç—Ä–∞–Ω—ã
export const COUNTRIES = [
  'Kazakhstan',
  'Russia',
  'United States',
  'United Kingdom', 
  'Germany',
  'France',
  'Italy',
  'Spain',
  'Canada',
  'Australia',
  'Japan',
  'China',
  'India',
  'Brazil',
  'Mexico',
  'Turkey',
  'Poland',
  'Czech Republic',
  'Ukraine',
  'Belarus',
  'Lithuania',
  'Latvia',
  'Estonia',
  'Georgia',
  'Armenia',
  'Azerbaijan',
  'Uzbekistan',
  'Kyrgyzstan',
  'Tajikistan',
  'Turkmenistan',
  'Mongolia'
];

// –ö–∞—Ä—Ç–∞ —Å—Ç—Ä–∞–Ω –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π (–¥–æ–±–∞–≤—å—Ç–µ –≤ constants.js)
export const COUNTRY_CODES = {
  'Kazakhstan': 'KZ',
  'Russia': 'RU',
  'Kyrgyzstan': 'KG',
  'United States': 'US',
  'United Kingdom': 'UK',
  'Germany': 'DE',
  'France': 'FR',
  'Italy': 'IT',
  'Spain': 'ES',
  'Canada': 'CA',
  'Australia': 'AU',
  'Japan': 'JP',
  'China': 'CN',
  'India': 'IN',
  'Brazil': 'BR',
  'Mexico': 'MX',
  'Turkey': 'TR',
  'Poland': 'PL',
  'Czech Republic': 'CZ',
  'Ukraine': 'UA',
  'Belarus': 'BY',
  'Lithuania': 'LT',
  'Latvia': 'LV',
  'Estonia': 'EE',
  'Georgia': 'GE',
  'Armenia': 'AM',
  'Azerbaijan': 'AZ',
  'Uzbekistan': 'UZ',
  'Tajikistan': 'TJ',
  'Turkmenistan': 'TM',
  'Mongolia': 'MN'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID —Å—Ç—É–¥–µ–Ω—Ç–∞
export const generateStudentId = (country, categoryId) => {
  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
  const countryCode = COUNTRY_CODES[country] || 'XX';
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 8 —Å–ª—É—á–∞–π–Ω—ã—Ö —Ü–∏—Ñ—Ä
  const randomDigits = Array.from({ length: 8 }, () => 
    Math.floor(Math.random() * 10)
  ).join('');
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º ID: –°–¢–†–ê–ù–ê-–ö–ê–¢–ï–ì–û–†–ò–Ø + 8 —Ü–∏—Ñ—Ä
  const studentId = `${countryCode}-${categoryId}${randomDigits}`;
  
  console.log(`üÜî Generated student ID: ${studentId} for country: ${country}, category: ${categoryId}`);
  
  return studentId;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ID (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–æ–∑–∂–µ)
export const isValidStudentId = (id) => {
  const pattern = /^[A-Z]{2}-\d{9}$/;
  return pattern.test(id);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É
export const getCategoriesBySubject = (subjectId) => {
  if (subjectId === 1 || subjectId === '1') {
    return ART_CATEGORIES; // –ò—Å–∫—É—Å—Å—Ç–≤–æ
  } else if (subjectId === 2 || subjectId === '2') {
    return MATH_CATEGORIES; // –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
  }
  return ALL_CATEGORIES;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ ID
export const getCategoryName = (categoryId) => {
  const category = ALL_CATEGORIES.find(cat => cat.id === parseInt(categoryId));
  return category ? category.name : 'Unknown Category';
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–º–µ—Ç—É
export const calculateCategory = (birthDate, subjectId) => {
  if (!birthDate) return null;
  
  const today = new Date();
  const birth = new Date(birthDate);
  let age = today.getFullYear() - birth.getFullYear();
  const monthDiff = today.getMonth() - birth.getMonth();
  
  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
    age--;
  }
  
  console.log(`üéÇ Calculated age: ${age} for birth date: ${birthDate}, subject: ${subjectId}`);
  
  const categories = getCategoriesBySubject(subjectId);
  
  for (const category of categories) {
    if (age >= category.minAge && age <= category.maxAge) {
      console.log(`üìù Category ${category.id} (${category.name})`);
      return category.id;
    }
  }
  
  console.log('‚ùå Age outside of valid range for this subject');
  return null;
};

// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤ constants.js:
export const calculateAge = (birthDate) => {
  if (!birthDate) return null;
  
  const birth = new Date(birthDate);
  const today = new Date();
  let age = today.getFullYear() - birth.getFullYear();
  const monthDiff = today.getMonth() - birth.getMonth();
  
  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
    age--;
  }
  
  return age;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä–æ–π –ª–æ–≥–∏–∫–∏ (–±–µ–∑ –ø—Ä–µ–¥–º–µ—Ç–∞) - –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export const calculateCategoryOld = (birthDate) => {
  if (!birthDate) return null;
  
  const today = new Date();
  const birth = new Date(birthDate);
  let age = today.getFullYear() - birth.getFullYear();
  const monthDiff = today.getMonth() - birth.getMonth();
  
  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
    age--;
  }
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞
  if (age >= 6 && age <= 9) return 5;
  if (age >= 10 && age <= 13) return 6;
  if (age >= 14 && age <= 17) return 7;
  
  return null;
};

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID —Å—Ç—É–¥–µ–Ω—Ç–∞
// export const generateStudentId = () => {
//   const timestamp = Date.now().toString();
//   const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');
//   return `TIG${timestamp.slice(-6)}${random}`;
// };

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
export const formatDate = (dateString) => {
  if (!dateString) return '';
  
  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Date –∏–∑ —Å—Ç—Ä–æ–∫–∏
  const date = new Date(dateString);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –≤–∞–ª–∏–¥–Ω–∞
  if (isNaN(date.getTime())) return dateString;
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ DD.MM.YYYY
  const day = date.getDate().toString().padStart(2, '0');
  const month = (date.getMonth() + 1).toString().padStart(2, '0');
  const year = date.getFullYear();
  
  return `${day}.${month}.${year}`;
};

// –°—Ç–∞—Ç—É—Å—ã —Ä–∞–±–æ—Ç
export const WORK_STATUSES = {
  PENDING: 'pending',
  REVIEWED: 'reviewed',
  SCORED: 'scored'
};

// –¢–∏–ø—ã —Ä–∞–±–æ—Ç
export const WORK_TYPES = {
  ART: 'art',
  MATH: 'math'
};